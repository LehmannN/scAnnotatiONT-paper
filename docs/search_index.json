[["impact-of-discrepant-reference-annotations-on-scrna-seq-analyses.html", "scAnnotatiONT paper companion 1 Impact of discrepant reference annotations on scRNA-seq analyses 1.1 Discrepancies in reference annotations 1.2 Impact of reference choice on scRNA-seq analyses", " scAnnotatiONT paper companion Nathalie Lehmann 2021-08-29 1 Impact of discrepant reference annotations on scRNA-seq analyses In this section, we will have a look at the differences between the three references genome annotation: Ensembl, NCBI (RefSeq) and UCSC. 1.1 Discrepancies in reference annotations 1.1.1 Define paths and get reference annotations These are just sanity steps to define the inputs and outputs of the workflow. echo &quot;export pathRef=&#39;data/raw/references/annotations/ucsc/&#39;&quot; &gt;&gt; .rvars echo &quot;export pathOutput=&#39;output/01-Impact-ref-annotation-scRNA/&#39;&quot; &gt;&gt; .rvars source .rvars mkdir -p $pathRef mkdir -p $pathOutput wget https://hgdownload.soe.ucsc.edu/goldenPath/galGal6/bigZips/genes/galGal6.ensGene.gtf.gz \\ -P $pathRef wget https://hgdownload.soe.ucsc.edu/goldenPath/galGal6/bigZips/genes/galGal6.ncbiRefSeq.gtf.gz \\ -P $pathRef wget https://hgdownload.soe.ucsc.edu/goldenPath/galGal6/bigZips/genes/galGal6.refGene.gtf.gz \\ -P $pathRef gunzip ${pathRef}*.gtf.gz 1.1.2 Basic stats on GTF files We here show some basic statistics out of the genome annotation file. For this purpose, we use mikado util stats. However, while running it on UCSC reference, we encounter some errors in the original file. We will start by fixing the file. 1.1.2.1 Fix GTF RefGene file When running mikado, we found out that some exons overlap. This causes mikado to throw an error such as “start must be less than end,” and it stops running. We use gffread -T to fix this issue. source .rvars gffread -T $ref3 &gt; ${ref3%.*}_fixed.gtf 1.1.3 Run nextflow pipeline We designed a scAnnotatiONT pipeline in order to process single-cell RNA-seq from poorly-annotated genomes. This pipeline contains also an option to process reference annotations. It outputs i) basic statistics on any GTF file, ii) single-cell RNA-seq analyses of our test dataset. # Pipeline available here (see &quot;paper&quot; branch) : https://github.com/LehmannN/scAnnotatiONT bash _run_nextflow_references.sh 1.1.4 Mikado file_names &lt;- c(&#39;ensGene&#39;, &#39;ncbiRefSeq&#39;, &#39;refGene&#39;) ref_names &lt;- c(&#39;Ensembl&#39;, &#39;NCBI&#39;, &#39;UCSC&#39;) mikado_files &lt;- c(paste0(&#39;output/01-Impact-ref-annotation-scRNA/mikado_stats/galGal6.&#39;, file_names,&#39;_stats.tsv&#39;)) gtf_stats &lt;- list() gtf_stats &lt;- lapply(mikado_files, read.csv, header = TRUE, sep = &#39;\\t&#39;, row.names = 1, quote = &quot;&quot;) show_df &lt;- function(x) { DT::datatable(x, extensions = c(&#39;Buttons&#39;, &#39;Scroller&#39;), options = list( dom = &#39;Bfrtip&#39;, buttons = c(&#39;csv&#39;, &#39;pdf&#39;), deferRender = TRUE, scrollY = 200, scrollX = TRUE, scroller = TRUE))} show_df(gtf_stats[[1]]) show_df(gtf_stats[[2]]) show_df(gtf_stats[[3]]) We also use asm_collect.py, which is a script to collect info from multiple mikado util stats files. See https://mikado.readthedocs.io/en/stable/Usage/Utilities/#stats for more details. asm_collect.py ${pathOutput}*_stats.tsv &gt; ${pathOutput}main_stats.tsv main_stats &lt;- read.csv(&quot;output/01-Impact-ref-annotation-scRNA/mikado_stats/main_stats.tsv&quot;, header = TRUE, sep = &#39;\\t&#39;, row.names = 1, quote = &quot;&quot;) show_df(main_stats) 1.1.5 Gene lengths We extract genes features from the GFF3 file (see workflow for more details: GTF files do not include the genes features). This allow us to get gene lengths distribution for each annotation. gff3_files &lt;- c(paste0(&#39;data/raw/references/annotations/ucsc/galGal6.&#39;, file_names,&#39;.gff3&#39;)) gff3_list &lt;- list() gff3_list &lt;- lapply(gff3_files, rtracklayer::import) gff3_list &lt;- lapply(gff3_list, as.data.frame) genes &lt;- lapply(gff3_list, function(x) filter(x, type == &quot;gene&quot;)) genes_width &lt;- list(Ensembl = genes[[1]][&#39;width&#39;], NCBI = genes[[2]][&#39;width&#39;], UCSC = genes[[3]][&#39;width&#39;]) summ &lt;- lapply(genes_width, summary) knitr::kable(summ[[1]]) width Min. : 12 1st Qu.: 3366 Median : 9414 Mean : 25933 3rd Qu.: 25488 Max. :1060737 knitr::kable(summ[[2]]) width Min. : 48 1st Qu.: 3575 Median : 9616 Mean : 48565 3rd Qu.: 26359 Max. :144520790 knitr::kable(summ[[3]]) width Min. : 48 1st Qu.: 2938 Median : 9268 Mean : 38997 3rd Qu.: 23802 Max. :41978018 # Define colors plots_colors &lt;- brewer.pal(8, &quot;Set2&quot;) # Prepare data for plotting width1 &lt;- data.frame(annotation = &quot;Ensembl&quot;, value = genes[[1]][&#39;width&#39;]) width2 &lt;- data.frame(annotation = &quot;NCBI&quot;, value = genes[[2]][&#39;width&#39;]) width3 &lt;- data.frame(annotation = &quot;UCSC&quot;, value = genes[[3]][&#39;width&#39;]) genes_width_df &lt;- rbind(width1, width2, width3) # Boxplot plot1 &lt;- ggplot(genes_width_df, aes(x = annotation, y = log10(width))) + geom_boxplot(width = 0.5, fill = plots_colors[1:3]) + labs(x = &quot;&quot;, y = &quot;&quot;, title = paste0(&quot;Genes lengths (log10) of the 3 reference annotations&quot;)) + theme_minimal() plot1 # Density plot plot1 &lt;- ggplot(genes_width_df, aes(x = log10(width), color = annotation)) + geom_density() + scale_color_manual(values = plots_colors[1:3]) + labs(x = &quot;&quot;, y = &quot;&quot;, title = paste0(&quot;Genes lengths (log10) of the 3 reference annotations&quot;)) + theme_minimal() plot1 # Histogram plot1 &lt;- ggplot(genes_width_df, aes(x = log10(width), fill = annotation)) + geom_histogram(bins = 30, color = &quot;#e9ecef&quot;, alpha = 0.5, position = &#39;identity&#39;) + scale_color_manual(values = plots_colors[1:3]) + labs(x = &quot;&quot;, y = &quot;&quot;, title = paste0(&quot;Genes lengths (log10) of the 3 reference annotations&quot;)) + theme_minimal() plot1 1.1.6 3’UTR lengths gtf_files &lt;- c(paste0(&#39;data/raw/references/annotations/ucsc/galGal6.&#39;, file_names,&#39;.gtf&#39;)) gtf_list &lt;- list() gtf_list &lt;- lapply(gtf_files, rtracklayer::import) gtf_list &lt;- lapply(gtf_list, as.data.frame) utr &lt;- lapply(gtf_list, function(x) filter(x, type == &quot;3UTR&quot;)) utr_width &lt;- list(Ensembl = utr[[1]][&#39;width&#39;], NCBI = utr[[2]][&#39;width&#39;], UCSC = utr[[3]][&#39;width&#39;]) summ &lt;- lapply(utr_width, summary) knitr::kable(summ[[1]]) width Min. : 1 1st Qu.: 157 Median : 481 Mean : 696 3rd Qu.: 1000 Max. :13396 knitr::kable(summ[[2]]) width Min. : 1.0 1st Qu.: 218.2 Median : 795.0 Mean : 1453.2 3rd Qu.: 1964.0 Max. :40768.0 knitr::kable(summ[[3]]) width Min. : 1.0 1st Qu.: 167.0 Median : 457.0 Mean : 787.1 3rd Qu.: 1094.5 Max. :13405.0 # Prepare data for plotting width1 &lt;- data.frame(annotation = &quot;Ensembl&quot;, value = utr[[1]][&#39;width&#39;]) width2 &lt;- data.frame(annotation = &quot;NCBI&quot;, value = utr[[2]][&#39;width&#39;]) width3 &lt;- data.frame(annotation = &quot;UCSC&quot;, value = utr[[3]][&#39;width&#39;]) utr_width_df &lt;- rbind(width1, width2, width3) plot1 &lt;- ggplot(utr_width_df, aes(x = annotation, y = log10(width))) + geom_boxplot(width = 0.5, fill = plots_colors[1:3]) + labs(x = &quot;&quot;, y = &quot;&quot;, title = paste0(&quot;3&#39;UTR lengths (log10) of the 3 reference annotations&quot;)) + theme_minimal() plot1 # Density plot plot1 &lt;- ggplot(utr_width_df, aes(x = log10(width), color = annotation)) + geom_density() + scale_color_manual(values = plots_colors[1:3]) + labs(x = &quot;&quot;, y = &quot;&quot;, title = paste0(&quot;3&#39;UTR lengths (log10) of the 3 reference annotations&quot;)) + theme_minimal() plot1 # Histogram plot1 &lt;- ggplot(utr_width_df, aes(x = log10(width), fill = annotation)) + geom_histogram(bins = 30, color = &quot;#e9ecef&quot;, alpha = 0.5, position = &#39;identity&#39;) + scale_color_manual(values = plots_colors[1:3]) + labs(x = &quot;&quot;, y = &quot;&quot;, title = paste0(&quot;3&#39;UTR lengths (log10) of the 3 reference annotations&quot;)) + theme_minimal() plot1 1.1.7 Venn Diagrams Intersections counts are produced via Intervene. This tool is based on bedtools interset. We defined intersections if at least 50% of the gene from reference A overlaps a gene in reference B, and vice versa. We also consider separately the forward and reverse strand. The resulting euler diagram (or proportional Venn diagram) is obtained with the package eulerr. source .rvars intervene venn -i $genesGff1 $genesGff2 $genesGff3 \\ --figtype png \\ --save-overlaps \\ --bedtools-options f=0.5,r,s \\ --output ${pathOutput} venn_intersect &lt;- euler(c(&quot;UCSC&quot; = 248, &quot;NCBI&quot; = 8555, &quot;Ensembl&quot; = 9004, &quot;NCBI&amp;Ensembl&quot; = 8927, &quot;NCBI&amp;UCSC&quot; = 253, &quot;Ensembl&amp;UCSC&quot; = 376, &quot;NCBI&amp;Ensembl&amp;UCSC&quot; = 6049)) plot(venn_intersect, quantities = list(type = c(&quot;counts&quot;), col = c(&quot;black&quot;, &quot;black&quot;, &quot;black&quot;), fontsize = 20), labels = list(col = c(&quot;black&quot;, &quot;black&quot;, &quot;black&quot;), fontsize = 22), edges = list(col = &quot;white&quot;, lex = 2), fills = plots_colors[3:1], legend = list(side = &quot;right&quot;)) 1.1.8 GffCompare 1.2 Impact of reference choice on scRNA-seq analyses "],["incomplete-annotations-induce-signal-loss.html", " 2 Incomplete annotations induce signal loss", " 2 Incomplete annotations induce signal loss "],["approaches-to-improve-transcriptome-with-long-reads.html", " 3 Approaches to improve transcriptome with long reads", " 3 Approaches to improve transcriptome with long reads "],["impact-of-re-annotation-on-scrna-seq-analyses.html", " 4 Impact of re-annotation on scRNA-seq analyses", " 4 Impact of re-annotation on scRNA-seq analyses "],["validation-of-novel-genes-with-scrna.html", " 5 Validation of novel genes with scRNA", " 5 Validation of novel genes with scRNA "],["a-tool-and-pipeline-to-improve-annotation-for-scrna-seq-analyses.html", " 6 A tool and pipeline to improve annotation for scRNA-seq analyses", " 6 A tool and pipeline to improve annotation for scRNA-seq analyses "],["session-info.html", " 7 Session info", " 7 Session info sessionInfo() ## R version 4.0.3 (2020-10-10) ## Platform: x86_64-conda-linux-gnu (64-bit) ## Running under: Ubuntu 16.04.4 LTS ## ## Matrix products: default ## BLAS/LAPACK: /import/bc_workspaces/csb/lehmann/conda/envs/scRNA/lib/libopenblasp-r0.3.12.so ## ## locale: ## [1] LC_CTYPE=fr_FR.UTF-8 LC_NUMERIC=C ## [3] LC_TIME=fr_FR.UTF-8 LC_COLLATE=fr_FR.UTF-8 ## [5] LC_MONETARY=fr_FR.UTF-8 LC_MESSAGES=fr_FR.UTF-8 ## [7] LC_PAPER=fr_FR.UTF-8 LC_NAME=C ## [9] LC_ADDRESS=C LC_TELEPHONE=C ## [11] LC_MEASUREMENT=fr_FR.UTF-8 LC_IDENTIFICATION=C ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] ggplot2_3.3.3 RColorBrewer_1.1-2 eulerr_6.1.0 dplyr_1.0.5 ## [5] bookdown_0.22 knitr_1.33 ## ## loaded via a namespace (and not attached): ## [1] MatrixGenerics_1.2.1 Biobase_2.50.0 ## [3] sass_0.3.1 jsonlite_1.7.2 ## [5] bslib_0.2.4 shiny_1.6.0 ## [7] assertthat_0.2.1 highr_0.8 ## [9] stats4_4.0.3 GenomeInfoDbData_1.2.4 ## [11] Rsamtools_2.6.0 yaml_2.2.1 ## [13] pillar_1.6.0 lattice_0.20-41 ## [15] glue_1.4.2 digest_0.6.27 ## [17] polyclip_1.10-0 GenomicRanges_1.42.0 ## [19] promises_1.2.0.1 XVector_0.30.0 ## [21] colorspace_2.0-0 htmltools_0.5.1.1 ## [23] httpuv_1.5.5 Matrix_1.3-2 ## [25] XML_3.99-0.6 pkgconfig_2.0.3 ## [27] zlibbioc_1.36.0 purrr_0.3.4 ## [29] xtable_1.8-4 scales_1.1.1 ## [31] later_1.1.0.1 BiocParallel_1.24.1 ## [33] tibble_3.1.0 farver_2.1.0 ## [35] generics_0.1.0 IRanges_2.24.1 ## [37] ellipsis_0.3.1 DT_0.18 ## [39] withr_2.4.1 SummarizedExperiment_1.20.0 ## [41] BiocGenerics_0.36.0 magrittr_2.0.1 ## [43] crayon_1.4.1 mime_0.10 ## [45] evaluate_0.14 fansi_0.4.2 ## [47] tools_4.0.3 lifecycle_1.0.0 ## [49] matrixStats_0.58.0 stringr_1.4.0 ## [51] S4Vectors_0.28.1 munsell_0.5.0 ## [53] DelayedArray_0.16.3 Biostrings_2.58.0 ## [55] compiler_4.0.3 jquerylib_0.1.3 ## [57] GenomeInfoDb_1.26.7 rlang_0.4.10 ## [59] grid_4.0.3 RCurl_1.98-1.3 ## [61] rstudioapi_0.13 htmlwidgets_1.5.3 ## [63] crosstalk_1.1.1 labeling_0.4.2 ## [65] bitops_1.0-6 rmarkdown_2.7 ## [67] gtable_0.3.0 DBI_1.1.1 ## [69] R6_2.5.0 GenomicAlignments_1.26.0 ## [71] rtracklayer_1.50.0 fastmap_1.1.0 ## [73] utf8_1.2.1 polylabelr_0.2.0 ## [75] stringi_1.5.3 parallel_4.0.3 ## [77] Rcpp_1.0.6 vctrs_0.3.7 ## [79] tidyselect_1.1.0 xfun_0.22 "]]
